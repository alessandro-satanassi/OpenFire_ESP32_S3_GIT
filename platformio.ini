; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = rpipico
default_envs = rpipicow
;default_envs = ESP32_S3_WROOM1_DevKitC_1_N16R8

[env]

[esp32]
platform_packages = 

[rp2040]
platform_packages = framework-arduinopico @ https://github.com/earlephilhower/arduino-pico.git#4.3.1 ;#master

[common]
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.10
	adafruit/Adafruit NeoPixel@^1.12.3
	adafruit/Adafruit GFX Library@^1.11.9
	adafruit/Adafruit BusIO@^1.16.1
build_flags = 
	-D DEVICE_VID=0xF143
	-D DEVICE_PID=0x1998
	-D USES_DISPLAY=1
	-D PLAYER_NUMBER=1
	-D USES_SOLENOID=1
	-D USES_RUMBLE=1
	-D USES_SWITCHES=1
	-D MAMEHOOKER=1
	-D USES_ANALOG=1
	-D CUSTOM_NEOPIXEL=1
	-D FOURPIN_LED=1
	-D DUAL_CORE=1
	-D USES_TEMP=1
	-D USE_TINYUSB
	-D SAMCO_EEPROM_ENABLE
	-std=gnu++17
	-std=gnu17
build_unflags = 
	-std=gnu++11
	-std=gnu11

[env:ESP32_S3_WROOM1_DevKitC_1_N16R8]
platform = espressif32
board = ESP32_S3_WROOM1_DevKitC_1_N16R8
framework = arduino
monitor_speed = 115200
lib_deps = 
	adafruit/Adafruit TinyUSB Library@^3.3.1
	${common.lib_deps}
build_flags = 
	-D ARDUINO_ESP32_S3_WROOM1_DevKitC_1_N16R8
	${common.build_flags}
build_unflags = ${common.build_unflags}
platform_packages = ${esp32.platform_packages}
lib_ldf_mode = chain+
lib_compat_mode = strict

[env:rpipicow]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git#develop
framework = arduino
board = rpipicow
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
monitor_speed = 9600
monitor_port = COM3 ;COM135
;monitor_speed = 115200
upload_protocol = picotool
build_type = release
lib_deps = ${common.lib_deps}
build_flags = 
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH
	-D OPENFIRE_BLE_ENABLE ; per il dispositivo HID usa il BLE .. se non attivato usa il bt classic
	-D RFCOMM_ENABLE ; abilita la porta seriale su bluetooth classic
	;-D FORZA_BT ; forza l'uso del bluetooth .. la coonessione usb non viene utilizzata anche se connesso
	${common.build_flags}
platform_packages = ${rp2040.platform_packages}
;board_build.mcu = 
;	rp2040
;	usbstack=tinyusb
;	opt=Optimize3
lib_ldf_mode = chain+
lib_compat_mode = strict

[env:rpipico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git#develop
framework = arduino
board = rpipico
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
monitor_speed = 115200
upload_protocol = picotool
build_type = release
lib_deps = ${common.lib_deps}
build_flags = 
	-D ENABLE_CLASSIC=1
	-D ENABLE_BLE=1
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
	-fstack-protector
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_RTTI
	${common.build_flags}
platform_packages = ${rp2040.platform_packages}
board_build.mcu = 
	rp2040
	usbstack=tinyusb
	opt=Optimize3
lib_ldf_mode = chain+
lib_compat_mode = strict
